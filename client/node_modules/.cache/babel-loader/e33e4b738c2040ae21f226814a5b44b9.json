{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Development/devconnect/client/src/components/dashboard/Dashboard.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getCurrentProfile } from \"../../redux/actions/profile\";\nimport Spinner from \"../layout/Spinner\";\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth,\n  profile: {\n    profile,\n    isLoading\n  }\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, [getCurrentProfile]);\n  return isLoading && profile === null ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 3\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 3\n    }\n  }, \"test\");\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile\n})(Dashboard);","map":{"version":3,"sources":["/Users/macbookpro/Development/devconnect/client/src/components/dashboard/Dashboard.js"],"names":["React","Fragment","useEffect","PropTypes","connect","getCurrentProfile","Spinner","Dashboard","auth","profile","isLoading","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AAEA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAClBF,EAAAA,iBADkB;AAElBG,EAAAA,IAFkB;AAGlBC,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AAHS,CAAD,KAIZ;AACLR,EAAAA,SAAS,CAAC,MAAM;AACfG,IAAAA,iBAAiB;AACjB,GAFQ,EAEN,CAACA,iBAAD,CAFM,CAAT;AAIA,SAAOK,SAAS,IAAID,OAAO,KAAK,IAAzB,gBACN,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,gBAGN,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD;AAKA,CAdD;;AAgBAF,SAAS,CAACI,SAAV,GAAsB;AACrBN,EAAAA,iBAAiB,EAAEF,SAAS,CAACS,IAAV,CAAeC,UADb;AAErBL,EAAAA,IAAI,EAAEL,SAAS,CAACW,MAAV,CAAiBD,UAFF;AAGrBJ,EAAAA,OAAO,EAAEN,SAAS,CAACW,MAAV,CAAiBD;AAHL,CAAtB;;AAMA,MAAME,eAAe,GAAIC,KAAD,KAAY;AACnCR,EAAAA,IAAI,EAAEQ,KAAK,CAACR,IADuB;AAEnCC,EAAAA,OAAO,EAAEO,KAAK,CAACP;AAFoB,CAAZ,CAAxB;;AAKA,eAAeL,OAAO,CAACW,eAAD,EAAkB;AAAEV,EAAAA;AAAF,CAAlB,CAAP,CAAgDE,SAAhD,CAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getCurrentProfile } from \"../../redux/actions/profile\";\n\nimport Spinner from \"../layout/Spinner\";\n\nconst Dashboard = ({\n\tgetCurrentProfile,\n\tauth,\n\tprofile: { profile, isLoading },\n}) => {\n\tuseEffect(() => {\n\t\tgetCurrentProfile();\n\t}, [getCurrentProfile]);\n\n\treturn isLoading && profile === null ? (\n\t\t<Spinner />\n\t) : (\n\t\t<Fragment>test</Fragment>\n\t);\n};\n\nDashboard.propTypes = {\n\tgetCurrentProfile: PropTypes.func.isRequired,\n\tauth: PropTypes.object.isRequired,\n\tprofile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\tauth: state.auth,\n\tprofile: state.profile,\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile })(Dashboard);\n"]},"metadata":{},"sourceType":"module"}