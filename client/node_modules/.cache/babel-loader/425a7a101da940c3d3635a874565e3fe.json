{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"../actions/alert\";\nimport { GET_PROFILE, UPDATE_PROFILE, PROFILE_ERROR, CLEAR_PROFILE, ACCOUNT_DELETED } from \"./types\"; // Get current users profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/profile/me\");\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: error.response.status\n    });\n  }\n}; // Create or update profile\n\nexport const createProfile = (FormData, history, edit = false) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.post(\"/api/profile\", FormData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? \"Profile Successfully Updated!\" : \"Profile Successfully Created!\", \"success\"));\n\n    if (!edit) {\n      history.push(\"/dashboard\");\n    }\n  } catch (error) {\n    const errors = error.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: error.response.status\n    });\n  }\n}; // Add experience\n\nexport const addExperience = (FormData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.put(\"/api/profile/experience\", FormData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Experience Successfully Added!\", \"success\"));\n    history.push(\"/dashboard\");\n  } catch (error) {\n    const errors = error.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: error.response.status\n    });\n  }\n}; // Add education\n\nexport const addEducation = (FormData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.put(\"/api/profile/education\", FormData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Education Successfully Added!\", \"success\"));\n    history.push(\"/dashboard\");\n  } catch (error) {\n    const errors = error.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: error.response.status\n    });\n  }\n}; // Delete expreience\n\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(`api/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Experience Successfully Removed!\", \"success\"));\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: error.response.status\n    });\n  }\n}; // Delete education\n\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(`api/profile/education/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Education Successfully Removed!\", \"success\"));\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: error.response.status\n    });\n  }\n}; // Delete account and profile\n\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm(\"Are you sure? This can NOT be undone!\")) {\n    try {\n      const res = await axios.delete(\"/api/profile\");\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n      dispatch(setAlert(\"Your account has been permanently deleted!\", \"success\"));\n    } catch (error) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: error.response.status\n      });\n    }\n  }\n};","map":{"version":3,"sources":["/Users/macbookpro/Development/devconnect/client/src/redux/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","UPDATE_PROFILE","PROFILE_ERROR","CLEAR_PROFILE","ACCOUNT_DELETED","getCurrentProfile","dispatch","res","get","type","payload","data","error","response","status","createProfile","FormData","history","edit","config","headers","post","push","errors","forEach","msg","addExperience","put","addEducation","deleteExperience","id","delete","deleteEducation","deleteAccount","window","confirm"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { setAlert } from \"../actions/alert\";\n\nimport {\n\tGET_PROFILE,\n\tUPDATE_PROFILE,\n\tPROFILE_ERROR,\n\tCLEAR_PROFILE,\n\tACCOUNT_DELETED,\n} from \"./types\";\n\n// Get current users profile\nexport const getCurrentProfile = () => async (dispatch) => {\n\ttry {\n\t\tconst res = await axios.get(\"/api/profile/me\");\n\n\t\tdispatch({\n\t\t\ttype: GET_PROFILE,\n\t\t\tpayload: res.data,\n\t\t});\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: PROFILE_ERROR,\n\t\t\tpayload: error.response.status,\n\t\t});\n\t}\n};\n\n// Create or update profile\nexport const createProfile = (FormData, history, edit = false) => async (\n\tdispatch\n) => {\n\ttry {\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t};\n\n\t\tconst res = await axios.post(\"/api/profile\", FormData, config);\n\n\t\tdispatch({\n\t\t\ttype: GET_PROFILE,\n\t\t\tpayload: res.data,\n\t\t});\n\n\t\tdispatch(\n\t\t\tsetAlert(\n\t\t\t\tedit\n\t\t\t\t\t? \"Profile Successfully Updated!\"\n\t\t\t\t\t: \"Profile Successfully Created!\",\n\t\t\t\t\"success\"\n\t\t\t)\n\t\t);\n\n\t\tif (!edit) {\n\t\t\thistory.push(\"/dashboard\");\n\t\t}\n\t} catch (error) {\n\t\tconst errors = error.response.data.errors;\n\n\t\tif (errors) {\n\t\t\terrors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n\t\t}\n\n\t\tdispatch({\n\t\t\ttype: PROFILE_ERROR,\n\t\t\tpayload: error.response.status,\n\t\t});\n\t}\n};\n\n// Add experience\nexport const addExperience = (FormData, history) => async (dispatch) => {\n\ttry {\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t};\n\n\t\tconst res = await axios.put(\"/api/profile/experience\", FormData, config);\n\n\t\tdispatch({\n\t\t\ttype: UPDATE_PROFILE,\n\t\t\tpayload: res.data,\n\t\t});\n\n\t\tdispatch(setAlert(\"Experience Successfully Added!\", \"success\"));\n\n\t\thistory.push(\"/dashboard\");\n\t} catch (error) {\n\t\tconst errors = error.response.data.errors;\n\n\t\tif (errors) {\n\t\t\terrors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n\t\t}\n\n\t\tdispatch({\n\t\t\ttype: PROFILE_ERROR,\n\t\t\tpayload: error.response.status,\n\t\t});\n\t}\n};\n\n// Add education\nexport const addEducation = (FormData, history) => async (dispatch) => {\n\ttry {\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t};\n\n\t\tconst res = await axios.put(\"/api/profile/education\", FormData, config);\n\n\t\tdispatch({\n\t\t\ttype: UPDATE_PROFILE,\n\t\t\tpayload: res.data,\n\t\t});\n\n\t\tdispatch(setAlert(\"Education Successfully Added!\", \"success\"));\n\n\t\thistory.push(\"/dashboard\");\n\t} catch (error) {\n\t\tconst errors = error.response.data.errors;\n\n\t\tif (errors) {\n\t\t\terrors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n\t\t}\n\n\t\tdispatch({\n\t\t\ttype: PROFILE_ERROR,\n\t\t\tpayload: error.response.status,\n\t\t});\n\t}\n};\n\n// Delete expreience\nexport const deleteExperience = (id) => async (dispatch) => {\n\ttry {\n\t\tconst res = await axios.delete(`api/profile/experience/${id}`);\n\n\t\tdispatch({\n\t\t\ttype: UPDATE_PROFILE,\n\t\t\tpayload: res.data,\n\t\t});\n\n\t\tdispatch(setAlert(\"Experience Successfully Removed!\", \"success\"));\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: PROFILE_ERROR,\n\t\t\tpayload: error.response.status,\n\t\t});\n\t}\n};\n\n// Delete education\nexport const deleteEducation = (id) => async (dispatch) => {\n\ttry {\n\t\tconst res = await axios.delete(`api/profile/education/${id}`);\n\n\t\tdispatch({\n\t\t\ttype: UPDATE_PROFILE,\n\t\t\tpayload: res.data,\n\t\t});\n\n\t\tdispatch(setAlert(\"Education Successfully Removed!\", \"success\"));\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: PROFILE_ERROR,\n\t\t\tpayload: error.response.status,\n\t\t});\n\t}\n};\n\n// Delete account and profile\nexport const deleteAccount = () => async (dispatch) => {\n\tif (window.confirm(\"Are you sure? This can NOT be undone!\")) {\n\t\ttry {\n\t\t\tconst res = await axios.delete(\"/api/profile\");\n\n\t\t\tdispatch({ type: CLEAR_PROFILE });\n\t\t\tdispatch({ type: ACCOUNT_DELETED });\n\n\t\t\tdispatch(\n\t\t\t\tsetAlert(\"Your account has been permanently deleted!\", \"success\")\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tdispatch({\n\t\t\t\ttype: PROFILE_ERROR,\n\t\t\t\tpayload: error.response.status,\n\t\t\t});\n\t\t}\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}