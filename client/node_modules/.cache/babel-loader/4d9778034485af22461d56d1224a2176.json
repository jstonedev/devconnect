{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Development/devconnect/client/src/components/profile/ProfileGithub.js\";\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getRepos } from \"../../redux/actions/profile\";\nimport Spinner from \"../layout/Spinner\";\n\nconst ProfileGithub = ({\n  username,\n  getRepos,\n  repos\n}) => {\n  useEffect(() => {\n    getRepos(username);\n  }, [getRepos]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-github\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-primary my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }\n  }, \"Github Repos\"), repos === null ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }) : repos.map(repo => /*#__PURE__*/React.createElement(\"div\", {\n    key: repo._id,\n    className: \"repo bg-white p-1 my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: repo.html_url,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, repo.name)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 8\n    }\n  }, repo.description)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"badge badge-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Stars: \", repo.stargazers_count), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"badge badge-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Watchers: \", repo.watchers_count), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"badge badge-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Forks: \", repo.forks_count))))));\n};\n\nProfileGithub.propTypes = {\n  getRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\n\nexport default connect(mapStateToProps, {\n  getRepos\n})(ProfileGithub);","map":{"version":3,"sources":["/Users/macbookpro/Development/devconnect/client/src/components/profile/ProfileGithub.js"],"names":["React","useEffect","PropTypes","connect","getRepos","Spinner","ProfileGithub","username","repos","map","repo","_id","html_url","name","description","stargazers_count","watchers_count","forks_count","propTypes","func","isRequired","array","string","mapStateToProps","state","profile"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYH,EAAAA,QAAZ;AAAsBI,EAAAA;AAAtB,CAAD,KAAmC;AACxDP,EAAAA,SAAS,CAAC,MAAM;AACfG,IAAAA,QAAQ,CAACG,QAAD,CAAR;AACA,GAFQ,EAEN,CAACH,QAAD,CAFM,CAAT;AAGA,sBACC;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,EAEEI,KAAK,KAAK,IAAV,gBACA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,GAGAA,KAAK,CAACC,GAAN,CAAWC,IAAD,iBACT;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAf;AAAoB,IAAA,SAAS,EAAC,wBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AACC,IAAA,IAAI,EAAED,IAAI,CAACE,QADZ;AAEC,IAAA,MAAM,EAAC,QAFR;AAGC,IAAA,GAAG,EAAC,qBAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIEF,IAAI,CAACG,IAJP,CADD,CADD,eASC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,IAAI,CAACI,WAAT,CATD,CADD,eAYC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAI,IAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACSJ,IAAI,CAACK,gBADd,CADD,eAIC;AAAI,IAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACYL,IAAI,CAACM,cADjB,CAJD,eAOC;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA0CN,IAAI,CAACO,WAA/C,CAPD,CADD,CAZD,CADD,CALF,CADD;AAmCA,CAvCD;;AAyCAX,aAAa,CAACY,SAAd,GAA0B;AACzBd,EAAAA,QAAQ,EAAEF,SAAS,CAACiB,IAAV,CAAeC,UADA;AAEzBZ,EAAAA,KAAK,EAAEN,SAAS,CAACmB,KAAV,CAAgBD,UAFE;AAGzBb,EAAAA,QAAQ,EAAEL,SAAS,CAACoB,MAAV,CAAiBF;AAHF,CAA1B;;AAMA,MAAMG,eAAe,GAAIC,KAAD,KAAY;AACnChB,EAAAA,KAAK,EAAEgB,KAAK,CAACC,OAAN,CAAcjB;AADc,CAAZ,CAAxB;;AAIA,eAAeL,OAAO,CAACoB,eAAD,EAAkB;AAAEnB,EAAAA;AAAF,CAAlB,CAAP,CAAuCE,aAAvC,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getRepos } from \"../../redux/actions/profile\";\nimport Spinner from \"../layout/Spinner\";\n\nconst ProfileGithub = ({ username, getRepos, repos }) => {\n\tuseEffect(() => {\n\t\tgetRepos(username);\n\t}, [getRepos]);\n\treturn (\n\t\t<div className=\"profile-github\">\n\t\t\t<h2 className=\"text-primary my-1\">Github Repos</h2>\n\t\t\t{repos === null ? (\n\t\t\t\t<Spinner />\n\t\t\t) : (\n\t\t\t\trepos.map((repo) => (\n\t\t\t\t\t<div key={repo._id} className=\"repo bg-white p-1 my-1\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h4>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref={repo.html_url}\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t\t\t{repo.name}\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t<p>{repo.description}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li className=\"badge badge-primary\">\n\t\t\t\t\t\t\t\t\tStars: {repo.stargazers_count}\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li className=\"badge badge-dark\">\n\t\t\t\t\t\t\t\t\tWatchers: {repo.watchers_count}\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li className=\"badge badge-light\">Forks: {repo.forks_count}</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t))\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nProfileGithub.propTypes = {\n\tgetRepos: PropTypes.func.isRequired,\n\trepos: PropTypes.array.isRequired,\n\tusername: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\trepos: state.profile.repos,\n});\n\nexport default connect(mapStateToProps, { getRepos })(ProfileGithub);\n"]},"metadata":{},"sourceType":"module"}