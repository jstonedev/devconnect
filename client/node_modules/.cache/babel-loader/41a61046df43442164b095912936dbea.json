{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { DELETE_POST, GET_POSTS, POST_ERROR, UPDATE_LIKES } from \"./types\"; // Get posts\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/posts\");\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_ERROR,\n      payload: error.response\n    });\n  }\n}; // Add like\n\nexport const addLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: error.response.statusText\n      }\n    });\n  }\n}; // Remove like\n\nexport const removeLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: error.response.statusText\n      }\n    });\n  }\n}; // Delete post\n\nexport const deletePost = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/posts/${id}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n    dispatch(setAlert(\"Post Removed\", \"success\"));\n  } catch (error) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: error.response.statusText\n      }\n    });\n  }\n}; // Add post\n\nexport const addPost = formData => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  try {\n    const res = await axios.delete(`/api/posts/${id}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n    dispatch(setAlert(\"Post Removed\", \"success\"));\n  } catch (error) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: error.response.statusText\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/macbookpro/Development/devconnect/client/src/redux/actions/post.js"],"names":["axios","setAlert","DELETE_POST","GET_POSTS","POST_ERROR","UPDATE_LIKES","getPosts","dispatch","res","get","type","payload","data","error","response","addLike","id","put","likes","msg","statusText","removeLike","deletePost","delete","addPost","formData","config","headers"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,UAAjC,EAA6CC,YAA7C,QAAiE,SAAjE,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACjD,MAAI;AACH,UAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,YAAV,CAAlB;AAEAF,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAEP,SADE;AAERQ,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFL,KAAD,CAAR;AAIA,GAPD,CAOE,OAAOC,KAAP,EAAc;AACfN,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAEN,UADE;AAERO,MAAAA,OAAO,EAAEE,KAAK,CAACC;AAFP,KAAD,CAAR;AAIA;AACD,CAdM,C,CAgBP;;AACA,OAAO,MAAMC,OAAO,GAAIC,EAAD,IAAQ,MAAOT,QAAP,IAAoB;AAClD,MAAI;AACH,UAAMC,GAAG,GAAG,MAAMR,KAAK,CAACiB,GAAN,CAAW,mBAAkBD,EAAG,EAAhC,CAAlB;AAEAT,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAEL,YADE;AAERM,MAAAA,OAAO,EAAE;AAAEK,QAAAA,EAAF;AAAME,QAAAA,KAAK,EAAEV,GAAG,CAACI;AAAjB;AAFD,KAAD,CAAR;AAIA,GAPD,CAOE,OAAOC,KAAP,EAAc;AACfN,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAEN,UADE;AAERO,MAAAA,OAAO,EAAE;AAAEQ,QAAAA,GAAG,EAAEN,KAAK,CAACC,QAAN,CAAeM;AAAtB;AAFD,KAAD,CAAR;AAIA;AACD,CAdM,C,CAgBP;;AACA,OAAO,MAAMC,UAAU,GAAIL,EAAD,IAAQ,MAAOT,QAAP,IAAoB;AACrD,MAAI;AACH,UAAMC,GAAG,GAAG,MAAMR,KAAK,CAACiB,GAAN,CAAW,qBAAoBD,EAAG,EAAlC,CAAlB;AAEAT,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAEL,YADE;AAERM,MAAAA,OAAO,EAAE;AAAEK,QAAAA,EAAF;AAAME,QAAAA,KAAK,EAAEV,GAAG,CAACI;AAAjB;AAFD,KAAD,CAAR;AAIA,GAPD,CAOE,OAAOC,KAAP,EAAc;AACfN,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAEN,UADE;AAERO,MAAAA,OAAO,EAAE;AAAEQ,QAAAA,GAAG,EAAEN,KAAK,CAACC,QAAN,CAAeM;AAAtB;AAFD,KAAD,CAAR;AAIA;AACD,CAdM,C,CAgBP;;AACA,OAAO,MAAME,UAAU,GAAIN,EAAD,IAAQ,MAAOT,QAAP,IAAoB;AACrD,MAAI;AACH,UAAMC,GAAG,GAAG,MAAMR,KAAK,CAACuB,MAAN,CAAc,cAAaP,EAAG,EAA9B,CAAlB;AAEAT,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAER,WADE;AAERS,MAAAA,OAAO,EAAEK;AAFD,KAAD,CAAR;AAKAT,IAAAA,QAAQ,CAACN,QAAQ,CAAC,cAAD,EAAiB,SAAjB,CAAT,CAAR;AACA,GATD,CASE,OAAOY,KAAP,EAAc;AACfN,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAEN,UADE;AAERO,MAAAA,OAAO,EAAE;AAAEQ,QAAAA,GAAG,EAAEN,KAAK,CAACC,QAAN,CAAeM;AAAtB;AAFD,KAAD,CAAR;AAIA;AACD,CAhBM,C,CAkBP;;AACA,OAAO,MAAMI,OAAO,GAAIC,QAAD,IAAc,MAAOlB,QAAP,IAAoB;AACxD,QAAMmB,MAAM,GAAG;AACdC,IAAAA,OAAO,EAAE;AACR,sBAAgB;AADR;AADK,GAAf;;AAKA,MAAI;AACH,UAAMnB,GAAG,GAAG,MAAMR,KAAK,CAACuB,MAAN,CAAc,cAAaP,EAAG,EAA9B,CAAlB;AAEAT,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAER,WADE;AAERS,MAAAA,OAAO,EAAEK;AAFD,KAAD,CAAR;AAKAT,IAAAA,QAAQ,CAACN,QAAQ,CAAC,cAAD,EAAiB,SAAjB,CAAT,CAAR;AACA,GATD,CASE,OAAOY,KAAP,EAAc;AACfN,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAEN,UADE;AAERO,MAAAA,OAAO,EAAE;AAAEQ,QAAAA,GAAG,EAAEN,KAAK,CAACC,QAAN,CAAeM;AAAtB;AAFD,KAAD,CAAR;AAIA;AACD,CArBM","sourcesContent":["import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { DELETE_POST, GET_POSTS, POST_ERROR, UPDATE_LIKES } from \"./types\";\n\n// Get posts\nexport const getPosts = () => async (dispatch) => {\n\ttry {\n\t\tconst res = await axios.get(\"/api/posts\");\n\n\t\tdispatch({\n\t\t\ttype: GET_POSTS,\n\t\t\tpayload: res.data,\n\t\t});\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: error.response,\n\t\t});\n\t}\n};\n\n// Add like\nexport const addLike = (id) => async (dispatch) => {\n\ttry {\n\t\tconst res = await axios.put(`/api/posts/like/${id}`);\n\n\t\tdispatch({\n\t\t\ttype: UPDATE_LIKES,\n\t\t\tpayload: { id, likes: res.data },\n\t\t});\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: { msg: error.response.statusText },\n\t\t});\n\t}\n};\n\n// Remove like\nexport const removeLike = (id) => async (dispatch) => {\n\ttry {\n\t\tconst res = await axios.put(`/api/posts/unlike/${id}`);\n\n\t\tdispatch({\n\t\t\ttype: UPDATE_LIKES,\n\t\t\tpayload: { id, likes: res.data },\n\t\t});\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: { msg: error.response.statusText },\n\t\t});\n\t}\n};\n\n// Delete post\nexport const deletePost = (id) => async (dispatch) => {\n\ttry {\n\t\tconst res = await axios.delete(`/api/posts/${id}`);\n\n\t\tdispatch({\n\t\t\ttype: DELETE_POST,\n\t\t\tpayload: id,\n\t\t});\n\n\t\tdispatch(setAlert(\"Post Removed\", \"success\"));\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: { msg: error.response.statusText },\n\t\t});\n\t}\n};\n\n// Add post\nexport const addPost = (formData) => async (dispatch) => {\n\tconst config = {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t};\n\ttry {\n\t\tconst res = await axios.delete(`/api/posts/${id}`);\n\n\t\tdispatch({\n\t\t\ttype: DELETE_POST,\n\t\t\tpayload: id,\n\t\t});\n\n\t\tdispatch(setAlert(\"Post Removed\", \"success\"));\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: { msg: error.response.statusText },\n\t\t});\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}