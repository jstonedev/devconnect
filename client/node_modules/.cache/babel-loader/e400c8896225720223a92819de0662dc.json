{"ast":null,"code":"import { DELETE_POST, GET_POSTS, CREATE_POST, POST_ERROR, UPDATE_LIKES, GET_POST, ADD_COMMENT, REMOVE_COMMENT } from \"../actions/types\";\nconst INITIALSTATE = {\n  posts: [],\n  post: null,\n  isLoading: true,\n  error: {}\n};\nexport default function (state = INITIALSTATE, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return { ...state,\n        posts: payload,\n        isLoading: false\n      };\n\n    case GET_POST:\n      return { ...state,\n        post: payload,\n        isLoading: false\n      };\n\n    case CREATE_POST:\n      return { ...state,\n        posts: [payload, ...state.posts],\n        isLoading: false\n      };\n\n    case DELETE_POST:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== payload),\n        isLoading: false\n      };\n\n    case POST_ERROR:\n      return { ...state,\n        error: payload,\n        isLoading: false\n      };\n\n    case UPDATE_LIKES:\n      return { ...state,\n        posts: state.posts.map(post => post._id === payload.id ? { ...post,\n          likes: payload.likes\n        } : post),\n        isLoading: false\n      };\n\n    case ADD_COMMENT:\n      return { ...state,\n        post: { ...state.post,\n          comments: payload\n        },\n        isLoading: false\n      };\n\n    case REMOVE_COMMENT:\n      return { ...state,\n        post: { ...state.post,\n          comments: state.post.comments.filter(comment => comment._id === payload)\n        },\n        isLoading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/macbookpro/Development/devconnect/client/src/redux/reducers/post.js"],"names":["DELETE_POST","GET_POSTS","CREATE_POST","POST_ERROR","UPDATE_LIKES","GET_POST","ADD_COMMENT","REMOVE_COMMENT","INITIALSTATE","posts","post","isLoading","error","state","action","type","payload","filter","_id","map","id","likes","comments","comment"],"mappings":"AAAA,SACCA,WADD,EAECC,SAFD,EAGCC,WAHD,EAICC,UAJD,EAKCC,YALD,EAMCC,QAND,EAOCC,WAPD,EAQCC,cARD,QASO,kBATP;AAWA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,KAAK,EAAE,EADa;AAEpBC,EAAAA,IAAI,EAAE,IAFc;AAGpBC,EAAAA,SAAS,EAAE,IAHS;AAIpBC,EAAAA,KAAK,EAAE;AAJa,CAArB;AAOA,eAAe,UAAUC,KAAK,GAAGL,YAAlB,EAAgCM,MAAhC,EAAwC;AACtD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACC,SAAKd,SAAL;AACC,aAAO,EACN,GAAGY,KADG;AAENJ,QAAAA,KAAK,EAAEO,OAFD;AAGNL,QAAAA,SAAS,EAAE;AAHL,OAAP;;AAKD,SAAKN,QAAL;AACC,aAAO,EACN,GAAGQ,KADG;AAENH,QAAAA,IAAI,EAAEM,OAFA;AAGNL,QAAAA,SAAS,EAAE;AAHL,OAAP;;AAKD,SAAKT,WAAL;AACC,aAAO,EACN,GAAGW,KADG;AAENJ,QAAAA,KAAK,EAAE,CAACO,OAAD,EAAU,GAAGH,KAAK,CAACJ,KAAnB,CAFD;AAGNE,QAAAA,SAAS,EAAE;AAHL,OAAP;;AAKD,SAAKX,WAAL;AACC,aAAO,EACN,GAAGa,KADG;AAENJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYQ,MAAZ,CAAoBP,IAAD,IAAUA,IAAI,CAACQ,GAAL,KAAaF,OAA1C,CAFD;AAGNL,QAAAA,SAAS,EAAE;AAHL,OAAP;;AAKD,SAAKR,UAAL;AACC,aAAO,EACN,GAAGU,KADG;AAEND,QAAAA,KAAK,EAAEI,OAFD;AAGNL,QAAAA,SAAS,EAAE;AAHL,OAAP;;AAKD,SAAKP,YAAL;AACC,aAAO,EACN,GAAGS,KADG;AAENJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYU,GAAZ,CAAiBT,IAAD,IACtBA,IAAI,CAACQ,GAAL,KAAaF,OAAO,CAACI,EAArB,GAA0B,EAAE,GAAGV,IAAL;AAAWW,UAAAA,KAAK,EAAEL,OAAO,CAACK;AAA1B,SAA1B,GAA8DX,IADxD,CAFD;AAKNC,QAAAA,SAAS,EAAE;AALL,OAAP;;AAOD,SAAKL,WAAL;AACC,aAAO,EACN,GAAGO,KADG;AAENH,QAAAA,IAAI,EAAE,EAAE,GAAGG,KAAK,CAACH,IAAX;AAAiBY,UAAAA,QAAQ,EAAEN;AAA3B,SAFA;AAGNL,QAAAA,SAAS,EAAE;AAHL,OAAP;;AAKD,SAAKJ,cAAL;AACC,aAAO,EACN,GAAGM,KADG;AAENH,QAAAA,IAAI,EAAE,EACL,GAAGG,KAAK,CAACH,IADJ;AAELY,UAAAA,QAAQ,EAAET,KAAK,CAACH,IAAN,CAAWY,QAAX,CAAoBL,MAApB,CACRM,OAAD,IAAaA,OAAO,CAACL,GAAR,KAAgBF,OADpB;AAFL,SAFA;AAQNL,QAAAA,SAAS,EAAE;AARL,OAAP;;AAUD;AACC,aAAOE,KAAP;AAzDF;AA2DA","sourcesContent":["import {\n\tDELETE_POST,\n\tGET_POSTS,\n\tCREATE_POST,\n\tPOST_ERROR,\n\tUPDATE_LIKES,\n\tGET_POST,\n\tADD_COMMENT,\n\tREMOVE_COMMENT,\n} from \"../actions/types\";\n\nconst INITIALSTATE = {\n\tposts: [],\n\tpost: null,\n\tisLoading: true,\n\terror: {},\n};\n\nexport default function (state = INITIALSTATE, action) {\n\tconst { type, payload } = action;\n\n\tswitch (type) {\n\t\tcase GET_POSTS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: payload,\n\t\t\t\tisLoading: false,\n\t\t\t};\n\t\tcase GET_POST:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: payload,\n\t\t\t\tisLoading: false,\n\t\t\t};\n\t\tcase CREATE_POST:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: [payload, ...state.posts],\n\t\t\t\tisLoading: false,\n\t\t\t};\n\t\tcase DELETE_POST:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: state.posts.filter((post) => post._id !== payload),\n\t\t\t\tisLoading: false,\n\t\t\t};\n\t\tcase POST_ERROR:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terror: payload,\n\t\t\t\tisLoading: false,\n\t\t\t};\n\t\tcase UPDATE_LIKES:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: state.posts.map((post) =>\n\t\t\t\t\tpost._id === payload.id ? { ...post, likes: payload.likes } : post\n\t\t\t\t),\n\t\t\t\tisLoading: false,\n\t\t\t};\n\t\tcase ADD_COMMENT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: { ...state.post, comments: payload },\n\t\t\t\tisLoading: false,\n\t\t\t};\n\t\tcase REMOVE_COMMENT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: {\n\t\t\t\t\t...state.post,\n\t\t\t\t\tcomments: state.post.comments.filter(\n\t\t\t\t\t\t(comment) => comment._id === payload\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tisLoading: false,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}