{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"../actions/alert\";\nimport { GET_PROFILE, PROFILE_ERROR } from \"./types\"; // Get current users profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/profile/me\");\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR\n    });\n  }\n}; // Create or update profile\n\nexport const createProfile = (FormData, history, edit = false) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.post(\"/api/profile\", FormData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? \"Profile Successfully Updated!\" : \"Profile Successfully Created!\", \"success\"));\n\n    if (!edit) {\n      history.push(\"/dashboard\");\n    }\n  } catch (error) {\n    const errors = error.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR\n    });\n  }\n}; // Add experience\n\nconst addExperience = (FormData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.put(\"/api/profile/experience\", FormData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Experience Successfully Added!\", \"success\"));\n    history.push(\"/dashboard\");\n  } catch (error) {\n    const errors = error.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR\n    });\n  }\n}; // Add education\n\n\nconst addEducation = (FormData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.put(\"/api/profile/education\", FormData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Education Successfully Added!\", \"success\"));\n    history.push(\"/dashboard\");\n  } catch (error) {\n    const errors = error.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR\n    });\n  }\n};","map":{"version":3,"sources":["/Users/macbookpro/Development/devconnect/client/src/redux/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","PROFILE_ERROR","getCurrentProfile","dispatch","res","get","type","payload","data","error","createProfile","FormData","history","edit","config","headers","post","push","errors","response","forEach","msg","addExperience","put","UPDATE_PROFILE","addEducation"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,SAA3C,C,CAEA;;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC1D,MAAI;AACH,UAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,iBAAV,CAAlB;AAEAF,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAEN,WADE;AAERO,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFL,KAAD,CAAR;AAIA,GAPD,CAOE,OAAOC,KAAP,EAAc;AACfN,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAEL;AADE,KAAD,CAAR;AAGA;AACD,CAbM,C,CAeP;;AACA,OAAO,MAAMS,aAAa,GAAG,CAACC,QAAD,EAAWC,OAAX,EAAoBC,IAAI,GAAG,KAA3B,KAAqC,OACjEV,QADiE,KAE7D;AACJ,MAAI;AACH,UAAMW,MAAM,GAAG;AACdC,MAAAA,OAAO,EAAE;AACR,wBAAgB;AADR;AADK,KAAf;AAMA,UAAMX,GAAG,GAAG,MAAMN,KAAK,CAACkB,IAAN,CAAW,cAAX,EAA2BL,QAA3B,EAAqCG,MAArC,CAAlB;AAEAX,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAEN,WADE;AAERO,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFL,KAAD,CAAR;AAKAL,IAAAA,QAAQ,CACPJ,QAAQ,CACPc,IAAI,GACD,+BADC,GAED,+BAHI,EAIP,SAJO,CADD,CAAR;;AASA,QAAI,CAACA,IAAL,EAAW;AACVD,MAAAA,OAAO,CAACK,IAAR,CAAa,YAAb;AACA;AACD,GA1BD,CA0BE,OAAOR,KAAP,EAAc;AACf,UAAMS,MAAM,GAAGT,KAAK,CAACU,QAAN,CAAeX,IAAf,CAAoBU,MAAnC;;AAEA,QAAIA,MAAJ,EAAY;AACXA,MAAAA,MAAM,CAACE,OAAP,CAAgBX,KAAD,IAAWN,QAAQ,CAACJ,QAAQ,CAACU,KAAK,CAACY,GAAP,EAAY,QAAZ,CAAT,CAAlC;AACA;;AAEDlB,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAEL;AADE,KAAD,CAAR;AAGA;AACD,CAxCM,C,CA0CP;;AACA,MAAMqB,aAAa,GAAG,CAACX,QAAD,EAAWC,OAAX,KAAuB,MAAOT,QAAP,IAAoB;AAChE,MAAI;AACH,UAAMW,MAAM,GAAG;AACdC,MAAAA,OAAO,EAAE;AACR,wBAAgB;AADR;AADK,KAAf;AAMA,UAAMX,GAAG,GAAG,MAAMN,KAAK,CAACyB,GAAN,CAAU,yBAAV,EAAqCZ,QAArC,EAA+CG,MAA/C,CAAlB;AAEAX,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAEkB,cADE;AAERjB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFL,KAAD,CAAR;AAKAL,IAAAA,QAAQ,CAACJ,QAAQ,CAAC,gCAAD,EAAmC,SAAnC,CAAT,CAAR;AAEAa,IAAAA,OAAO,CAACK,IAAR,CAAa,YAAb;AACA,GAjBD,CAiBE,OAAOR,KAAP,EAAc;AACf,UAAMS,MAAM,GAAGT,KAAK,CAACU,QAAN,CAAeX,IAAf,CAAoBU,MAAnC;;AAEA,QAAIA,MAAJ,EAAY;AACXA,MAAAA,MAAM,CAACE,OAAP,CAAgBX,KAAD,IAAWN,QAAQ,CAACJ,QAAQ,CAACU,KAAK,CAACY,GAAP,EAAY,QAAZ,CAAT,CAAlC;AACA;;AAEDlB,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAEL;AADE,KAAD,CAAR;AAGA;AACD,CA7BD,C,CA+BA;;;AACA,MAAMwB,YAAY,GAAG,CAACd,QAAD,EAAWC,OAAX,KAAuB,MAAOT,QAAP,IAAoB;AAC/D,MAAI;AACH,UAAMW,MAAM,GAAG;AACdC,MAAAA,OAAO,EAAE;AACR,wBAAgB;AADR;AADK,KAAf;AAMA,UAAMX,GAAG,GAAG,MAAMN,KAAK,CAACyB,GAAN,CAAU,wBAAV,EAAoCZ,QAApC,EAA8CG,MAA9C,CAAlB;AAEAX,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAEkB,cADE;AAERjB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFL,KAAD,CAAR;AAKAL,IAAAA,QAAQ,CAACJ,QAAQ,CAAC,+BAAD,EAAkC,SAAlC,CAAT,CAAR;AAEAa,IAAAA,OAAO,CAACK,IAAR,CAAa,YAAb;AACA,GAjBD,CAiBE,OAAOR,KAAP,EAAc;AACf,UAAMS,MAAM,GAAGT,KAAK,CAACU,QAAN,CAAeX,IAAf,CAAoBU,MAAnC;;AAEA,QAAIA,MAAJ,EAAY;AACXA,MAAAA,MAAM,CAACE,OAAP,CAAgBX,KAAD,IAAWN,QAAQ,CAACJ,QAAQ,CAACU,KAAK,CAACY,GAAP,EAAY,QAAZ,CAAT,CAAlC;AACA;;AAEDlB,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAEL;AADE,KAAD,CAAR;AAGA;AACD,CA7BD","sourcesContent":["import axios from \"axios\";\nimport { setAlert } from \"../actions/alert\";\n\nimport { GET_PROFILE, PROFILE_ERROR } from \"./types\";\n\n// Get current users profile\nexport const getCurrentProfile = () => async (dispatch) => {\n\ttry {\n\t\tconst res = await axios.get(\"/api/profile/me\");\n\n\t\tdispatch({\n\t\t\ttype: GET_PROFILE,\n\t\t\tpayload: res.data,\n\t\t});\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: PROFILE_ERROR,\n\t\t});\n\t}\n};\n\n// Create or update profile\nexport const createProfile = (FormData, history, edit = false) => async (\n\tdispatch\n) => {\n\ttry {\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t};\n\n\t\tconst res = await axios.post(\"/api/profile\", FormData, config);\n\n\t\tdispatch({\n\t\t\ttype: GET_PROFILE,\n\t\t\tpayload: res.data,\n\t\t});\n\n\t\tdispatch(\n\t\t\tsetAlert(\n\t\t\t\tedit\n\t\t\t\t\t? \"Profile Successfully Updated!\"\n\t\t\t\t\t: \"Profile Successfully Created!\",\n\t\t\t\t\"success\"\n\t\t\t)\n\t\t);\n\n\t\tif (!edit) {\n\t\t\thistory.push(\"/dashboard\");\n\t\t}\n\t} catch (error) {\n\t\tconst errors = error.response.data.errors;\n\n\t\tif (errors) {\n\t\t\terrors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n\t\t}\n\n\t\tdispatch({\n\t\t\ttype: PROFILE_ERROR,\n\t\t});\n\t}\n};\n\n// Add experience\nconst addExperience = (FormData, history) => async (dispatch) => {\n\ttry {\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t};\n\n\t\tconst res = await axios.put(\"/api/profile/experience\", FormData, config);\n\n\t\tdispatch({\n\t\t\ttype: UPDATE_PROFILE,\n\t\t\tpayload: res.data,\n\t\t});\n\n\t\tdispatch(setAlert(\"Experience Successfully Added!\", \"success\"));\n\n\t\thistory.push(\"/dashboard\");\n\t} catch (error) {\n\t\tconst errors = error.response.data.errors;\n\n\t\tif (errors) {\n\t\t\terrors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n\t\t}\n\n\t\tdispatch({\n\t\t\ttype: PROFILE_ERROR,\n\t\t});\n\t}\n};\n\n// Add education\nconst addEducation = (FormData, history) => async (dispatch) => {\n\ttry {\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t};\n\n\t\tconst res = await axios.put(\"/api/profile/education\", FormData, config);\n\n\t\tdispatch({\n\t\t\ttype: UPDATE_PROFILE,\n\t\t\tpayload: res.data,\n\t\t});\n\n\t\tdispatch(setAlert(\"Education Successfully Added!\", \"success\"));\n\n\t\thistory.push(\"/dashboard\");\n\t} catch (error) {\n\t\tconst errors = error.response.data.errors;\n\n\t\tif (errors) {\n\t\t\terrors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n\t\t}\n\n\t\tdispatch({\n\t\t\ttype: PROFILE_ERROR,\n\t\t});\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}