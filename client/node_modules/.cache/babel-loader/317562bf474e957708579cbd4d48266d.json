{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR } from \"../actions/types\"; // Load User\n\nexport const loadUser = ({\n  name,\n  email,\n  password\n}) => async dispatch => {}; // Register User\n\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post(\"/api/users\", body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (error) {\n    const errors = error.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["/Users/macbookpro/Development/devconnect/client/src/redux/actions/auth.js"],"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","loadUser","name","email","password","dispatch","register","config","headers","body","JSON","stringify","res","post","type","payload","data","error","errors","response","forEach","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SACCC,gBADD,EAECC,aAFD,EAGCC,WAHD,EAICC,UAJD,QAKO,kBALP,C,CAOA;;AACA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA+B,MAAOC,QAAP,IAAoB,CAAE,CAAtE,C,CAEP;;AACA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEJ,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA+B,MAAOC,QAAP,IAAoB;AAC1E,QAAME,MAAM,GAAG;AACdC,IAAAA,OAAO,EAAE;AACR,sBAAgB;AADR;AADK,GAAf;AAMA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAET,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAf,CAAb;;AAEA,MAAI;AACH,UAAMQ,GAAG,GAAG,MAAMjB,KAAK,CAACkB,IAAN,CAAW,YAAX,EAAyBJ,IAAzB,EAA+BF,MAA/B,CAAlB;AAEAF,IAAAA,QAAQ,CAAC;AACRS,MAAAA,IAAI,EAAEjB,gBADE;AAERkB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFL,KAAD,CAAR;AAIA,GAPD,CAOE,OAAOC,KAAP,EAAc;AACf,UAAMC,MAAM,GAAGD,KAAK,CAACE,QAAN,CAAeH,IAAf,CAAoBE,MAAnC;;AAEA,QAAIA,MAAJ,EAAY;AACXA,MAAAA,MAAM,CAACE,OAAP,CAAgBH,KAAD,IAAWZ,QAAQ,CAACT,QAAQ,CAACqB,KAAK,CAACI,GAAP,EAAY,QAAZ,CAAT,CAAlC;AACA;;AAEDhB,IAAAA,QAAQ,CAAC;AACRS,MAAAA,IAAI,EAAEhB;AADE,KAAD,CAAR;AAGA;AACD,CA3BM","sourcesContent":["import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport {\n\tREGISTER_SUCCESS,\n\tREGISTER_FAIL,\n\tUSER_LOADED,\n\tAUTH_ERROR,\n} from \"../actions/types\";\n\n// Load User\nexport const loadUser = ({ name, email, password }) => async (dispatch) => {};\n\n// Register User\nexport const register = ({ name, email, password }) => async (dispatch) => {\n\tconst config = {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t};\n\n\tconst body = JSON.stringify({ name, email, password });\n\n\ttry {\n\t\tconst res = await axios.post(\"/api/users\", body, config);\n\n\t\tdispatch({\n\t\t\ttype: REGISTER_SUCCESS,\n\t\t\tpayload: res.data,\n\t\t});\n\t} catch (error) {\n\t\tconst errors = error.response.data.errors;\n\n\t\tif (errors) {\n\t\t\terrors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n\t\t}\n\n\t\tdispatch({\n\t\t\ttype: REGISTER_FAIL,\n\t\t});\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}